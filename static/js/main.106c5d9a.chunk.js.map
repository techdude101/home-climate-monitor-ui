{"version":3,"sources":["components/card.jsx","components/cards.jsx","components/line-chart.jsx","components/graph.jsx","utils/constants.js","utils/device.js","utils/device-data.js","components/container.jsx","App.js","index.js"],"names":["Card","props","handleClick","bind","e","this","clickHandler","title","date","locale","navigator","language","Intl","DateTimeFormat","dateStyle","timeStyle","hour12","format","Date","className","selected","onClick","temperature","humidity","formatDate","Component","Cards","getDeviceDescription","serial","result","devices","filter","d","length","description","deviceCard","readings","undefined","map","device","timestamp","selectedDevice","Plot","createPlotlyComponent","Plotly","LineChart","state","labels","label","xData","yData","dateData","chartData","options","numArray","Math","min","apply","max","minY1","floor","getMinOfArray","yDataLeft","maxY1","ceil","getMaxOfArray","minY2","round","yDataRight","maxY2","setState","color","elements","point","radius","responsive","scales","y","type","position","grid","ticks","display","stepSize","y1","drawOnChartArea","x","previousProps","previousState","data","name","mode","hovertemplate","yaxis","layout","margin","t","b","l","r","pad","autosize","legend","orientation","yanchor","xanchor","xaxis","text","autorange","automargin","range","yaxis2","overlaying","side","hovermode","useResizeHandler","style","maxWidth","height","React","Graph","Array","isArray","temperatures","timestamps","labelLeft","labelRight","URL","getDevices","a","url","CONSTANTS","fetchData","hasOwnProperty","timeout","axios","method","getLastReading","device_serial","getData","start","end","replace","Container","handleChangeDevice","handleBurger","last_readings","selected_device","device_data","console","log","target","new_selected_device","getDataLast24Hours","start_date","setDate","getDate","end_date","toISOString","document","addEventListener","elems","querySelectorAll","defaultDate","setDefaultDate","M","Datepicker","init","Promise","all","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.106c5d9a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    this.props.clickHandler(this.props.title);\r\n  }\r\n\r\n  formatDate(date) {\r\n    // Get user locale from browser\r\n    const locale = navigator.language;\r\n\r\n    return new Intl.DateTimeFormat(locale, { dateStyle: 'short', timeStyle: 'short', hour12: false }).format(new Date(date));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col s12 m5 l3\">\r\n        <div className={`card card-pointer blue-grey ${this.props.selected ? \"darken-3\" : \"darken-4\"}`} onClick={this.handleClick}>\r\n          <div className={`card grey ${this.props.selected ? \"darken-3\" : \"darken-4\"}`}>\r\n            <div className=\"card-content white-text\">\r\n              <span className=\"card-span\">{this.props.title ? this.props.title : \"Title\"}</span>\r\n              <span className=\"card-title\">{this.props.temperature ? this.props.temperature + \"\\u00b0C\" : \"Temperature Error\"}</span>\r\n              <p className=\"card-span\">{this.props.humidity ? this.props.humidity + \"%\" : \"Humdity Error\"}</p>\r\n              <div className=\"divider\"></div>\r\n              <span className=\"card-span\">{this.props.date ? this.formatDate(this.props.date) : \"Date Error\"}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\n\r\nimport Card from './card';\r\n\r\nclass Cards extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.clickHandler = this.clickHandler.bind(this);\r\n  }\r\n\r\n  clickHandler(e) {\r\n    this.props.clickHandler(e);\r\n  }\r\n\r\n  getDeviceDescription = (serial) => {\r\n    const result = this.props.devices.filter(d => serial === d.serial);\r\n    // return result[0].description;\r\n    return result.length !== 0 ? result[0].description : \"\";\r\n  }\r\n\r\n  deviceCard = () => {\r\n    if (this.props.readings === null) return;\r\n    if (this.props.readings[0] === undefined) return;\r\n    return  this.props.readings.map((device) => {\r\n      if (device[0] !== undefined) {\r\n      return <Card\r\n      key={device[0].serial}\r\n      title={this.getDeviceDescription(device[0].serial)}\r\n      humidity={device[0].humidity}\r\n      temperature={device[0].temperature}\r\n      date={device[0].timestamp} \r\n      clickHandler={this.clickHandler} \r\n      selected={this.props.selectedDevice === this.getDeviceDescription(device[0].serial)} />\r\n      } else { return \"\" }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        {this.props.devices !== undefined ? this.deviceCard() : \"\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\nimport Plotly from \"plotly.js-basic-dist\";\r\n\r\nimport createPlotlyComponent from \"react-plotly.js/factory\";\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nclass LineChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      labels: [],\r\n      label: null,\r\n      xData: [],\r\n      yData: [],\r\n      dateData: [],\r\n      chartData: {},\r\n      options: {},\r\n    }\r\n  }\r\n\r\n  getMinOfArray(numArray) {\r\n    return Math.min.apply(null, numArray);\r\n  }\r\n\r\n  getMaxOfArray(numArray) {\r\n    return Math.max.apply(null, numArray);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const minY1 = Math.floor(this.getMinOfArray(this.props.yDataLeft));\r\n    const maxY1 = Math.ceil(this.getMaxOfArray(this.props.yDataLeft));\r\n\r\n    const minY2 = Math.round(this.getMinOfArray(this.props.yDataRight) - 1);\r\n    const maxY2 = Math.round(this.getMaxOfArray(this.props.yDataRight) + 1);\r\n\r\n    this.setState({\r\n      minY1: minY1,\r\n      maxY1: maxY1,\r\n      options: {\r\n        color: '#FFF',\r\n        elements: {\r\n          point: { radius: 0 }\r\n        },\r\n        responsive: true,\r\n        scales: {\r\n          y: {\r\n            type: 'linear',\r\n            position: 'left',\r\n            grid: {\r\n              color: 'rgba(255, 255, 255, 0.1)',\r\n            },\r\n            min: minY1,\r\n            max: maxY1,\r\n            ticks: {\r\n              display: true,\r\n              stepSize: 0.5,\r\n              color: 'rgba(255, 255, 255, 0.7)',\r\n            }\r\n          },\r\n          y1: {\r\n            type: 'linear',\r\n            position: 'right',\r\n            grid: {\r\n              drawOnChartArea: false, // only want the grid lines for one axis to show up\r\n            },\r\n            min: minY2,\r\n            max: maxY2,\r\n            ticks: {\r\n              display: true,\r\n              stepSize: 1,\r\n              color: 'rgba(255, 255, 255, 0.7)',\r\n            }\r\n          },\r\n          x: {\r\n            grid: {\r\n              color: 'rgba(255, 255, 255, 0.1)',\r\n            },\r\n            ticks: {\r\n              display: true,\r\n              color: 'rgba(255, 255, 255, 0.7)',\r\n            }\r\n          }\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(previousProps, previousState) {\r\n    if (previousProps.yDataLeft !== this.props.yDataLeft) {\r\n      const minY1 = Math.floor(this.getMinOfArray(this.props.yDataLeft));\r\n      const maxY1 = Math.ceil(this.getMaxOfArray(this.props.yDataLeft));\r\n      this.setState({\r\n        minY1: minY1,\r\n        maxY1: maxY1\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Plot\r\n          data={[\r\n            {\r\n              x: this.props.xData,\r\n              y: this.props.yDataLeft,\r\n              name: \"Temperature\",\r\n              mode: 'lines',\r\n              hovertemplate: ' %{y:.1f}&deg;C',\r\n            },\r\n            {\r\n              x: this.props.xData,\r\n              y: this.props.yDataRight,\r\n              yaxis: \"y2\",\r\n              name: \"Humidity\",\r\n              mode: 'lines',\r\n              hovertemplate: ' %{y:.0f}%',\r\n            },\r\n          ]}\r\n          layout={{\r\n            margin: {\r\n              t: 90,\r\n              b: 90,\r\n              l: 70,\r\n              r: 70,\r\n              pad: 10\r\n            },\r\n\r\n            autosize: true,\r\n            legend: {\r\n              orientation: \"h\",\r\n              yanchor: \"bottom\",\r\n              y: 1.12,\r\n              xanchor: \"right\",\r\n              x: 1,\r\n            },\r\n            xaxis: {\r\n              title: { text: 'Date/Time' },\r\n              autorange: \"false\",\r\n              type: 'date',\r\n            },\r\n            yaxis: { title: 'Temperature (&deg;C)', automargin: true, range: [this.state.minY1, this.state.maxY1] },\r\n            yaxis2: {\r\n              title: 'Humidity (%)',\r\n              range: [0, 100],\r\n              overlaying: 'y',\r\n              side: 'right',\r\n              automargin: true,\r\n            },\r\n            hovermode: \"x unified\",\r\n          }}\r\n          useResizeHandler={true}\r\n          style={{ maxWidth: \"100%\", height: \"100%\" }}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nexport default LineChart;","import React, { Component } from 'react';\r\n\r\nimport LineChart from './line-chart';\r\n\r\nclass Graph extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    if (Array.isArray(this.props.data)) {\r\n      this.state = {\r\n        data: this.props.data,\r\n        temperatures: this.props.data.map(d => d.temperature),\r\n        humidity: this.props.data.map(d => d.humidity),\r\n        timestamps: this.props.data.map(d => d.timestamp)\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(previousProps, previousState) {\r\n    if (previousProps.data !== this.props.data && Array.isArray(this.props.data)) {\r\n      const temperatures = this.props.data.map(d => d.temperature);\r\n      const humidity = this.props.data.map(d => d.humidity);\r\n      const timestamps = this.props.data.map(d => d.timestamp);\r\n      this.setState({\r\n        temperatures: temperatures,\r\n        humidity: humidity,\r\n        timestamps: timestamps\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m12 l12\">\r\n          <div className=\"card blue-grey darken-1\">\r\n            <div className=\"card-title white-text center-align hide-on-large-only\">\r\n              {this.props.title}\r\n            </div>\r\n            <div className=\"card-content white-text\">\r\n              {this.state !== null ? \r\n              <LineChart\r\n                labelLeft=\"Temperature (℃)\"\r\n                labelRight=\"Humidity (%)\"\r\n                xData={this.state.timestamps}\r\n                yDataLeft={this.state.temperatures}\r\n                yDataRight={this.state.humidity}\r\n                title={\" \"}\r\n              /> : \"\"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;","export const URL = 'https://home-climate-monitor.herokuapp.com';","import axios from 'axios';\r\nimport * as CONSTANTS from './constants';\r\n\r\nexport const getDevices = async () => {\r\n  const url = `${CONSTANTS.URL}/device/`;\r\n  const data = await fetchData(url);\r\n  return data.hasOwnProperty('data') ? data.data : [];\r\n};\r\n\r\nexport async function fetchData(url, timeout=4000) {\r\n  try {\r\n    return await axios({\r\n      method: 'get',\r\n      url: url,\r\n      timeout: timeout,\r\n    });\r\n  } catch {\r\n    return \"Error\";\r\n  }\r\n}","import axios from 'axios';\r\nimport * as CONSTANTS from './constants';\r\n\r\nexport const getLastReading = async (device_serial) => {\r\n  const url = `${CONSTANTS.URL}/data/${device_serial}/last`;\r\n  const data = await fetchData(url);\r\n  // console.log(data)\r\n  return data.data;\r\n};\r\n\r\nexport const getData = async (device_serial, start=new Date(), end=new Date()) => {\r\n  const url = `${CONSTANTS.URL}/data/${device_serial}?start=${start.replace('Z', '')}&end=${end.replace('Z', '')}`;\r\n  const data = await fetchData(url);\r\n  // console.log(data)\r\n  return data.data;\r\n};\r\n\r\nexport async function fetchData(url, timeout=4000) {\r\n  try {\r\n    return await axios({\r\n      method: 'get',\r\n      url: url,\r\n      timeout: timeout,\r\n    });\r\n  } catch {\r\n    return \"Error\";\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nimport Cards from './cards';\r\nimport Graph from './graph';\r\nimport { getDevices } from '../utils/device'\r\nimport { getLastReading, getData } from '../utils/device-data';\r\n\r\nclass Container extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChangeDevice = this.handleChangeDevice.bind(this);\r\n    this.handleBurger = this.handleBurger.bind(this);\r\n    this.state = {\r\n      devices: null,\r\n      last_readings: [],\r\n      selected_device: null,\r\n      device_data: null\r\n    }\r\n  }\r\n\r\n  handleBurger(e) {\r\n    console.log(\"burger\");\r\n  }\r\n\r\n  async handleChangeDevice(e) {\r\n    let device = null;\r\n    if (e.hasOwnProperty('target')) {\r\n      device = e.target.text;\r\n    } else {\r\n      device = e;\r\n    }\r\n    // Check if the target device is different\r\n    if (device === this.state.selected_device.description) return;\r\n    // Update new selected device\r\n    let new_selected_device = this.state.devices.filter(d => d.description === device);\r\n    // Retrieve data from device\r\n    if (new_selected_device.length !== 0) {\r\n      // Array.filter returns array - get first element in the array\r\n      new_selected_device = new_selected_device[0];\r\n      const data = await this.getDataLast24Hours(new_selected_device.serial);\r\n      this.setState({\r\n        selected_device: new_selected_device,\r\n        device_data: data\r\n      });\r\n    }\r\n  }\r\n\r\n  async getDataLast24Hours(serial) {\r\n    if (serial === undefined) return;\r\n    if (serial == null) return;\r\n    let start_date = new Date();\r\n    start_date.setDate(start_date.getDate() - 1);\r\n    let end_date = new Date();\r\n    end_date.setDate(end_date.getDate() + 1);\r\n\r\n    return getData(serial, start_date.toISOString(), end_date.toISOString());\r\n  }\r\n\r\n  async componentDidMount() {\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n      var elems = document.querySelectorAll('.datepicker');\r\n      const options = {\r\n        defaultDate: new Date(),\r\n        setDefaultDate: true,\r\n      }\r\n      var instances = M.Datepicker.init(elems, options);\r\n    });\r\n    const devices = await getDevices();\r\n\r\n    this.setState({\r\n      devices: devices\r\n    });\r\n\r\n    if (this.state.devices !== undefined) {\r\n      this.setState({ selected_device: this.state.devices[0] })\r\n      const readings = await Promise.all(this.state.devices.map((device) => {\r\n        return getLastReading(device.serial);\r\n      }));\r\n      this.setState({\r\n        last_readings: readings\r\n      })\r\n\r\n      let start_date = new Date();\r\n      start_date.setDate(start_date.getDate() - 1);\r\n      let end_date = new Date();\r\n      end_date.setDate(end_date.getDate() + 1);\r\n      if (this.state.selected_device !== undefined) {\r\n        const data = await getData(this.state.selected_device.serial, start_date.toISOString(), end_date.toISOString());\r\n        if (data !== undefined) {\r\n          this.setState({ device_data: data });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row margin-none\">\r\n          <div className=\"hide hide-on-med-and-up center-align\">\r\n            <h1 className=\"white-text margin-none header-title\">Dashboard</h1>\r\n            <div className=\"burger\" onClick={this.handleBurger}>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n            <ul className=\"mobileNav\">\r\n              {this.state.devices != null ? this.state.devices.map(device => {\r\n                return <li key={device.serial}><a onClick={this.handleChangeDevice} className=\"waves-effect waves-light btn grey darken-2 sidebar-links\">{device.description}</a></li>\r\n              }) : \"\"}\r\n            </ul>\r\n          </div>\r\n          <div className=\"col s12 m4 l2 blue-grey darken-3 min-height-100 hide-on-med-and-down\">\r\n            <div className=\"section white-text text-center\">\r\n              <h1 className=\"white-text sidebar-title\">Graphs</h1>\r\n              <div className=\"divider\"></div>\r\n              <input type=\"text\" className=\"datepicker datepicker-override\"></input>\r\n              <ul>\r\n                {this.state.devices != null ? this.state.devices.map(device => {\r\n                  return <li key={device.serial}><a onClick={this.handleChangeDevice} className=\"waves-effect waves-light btn grey darken-2 sidebar-links\">{device.description}</a></li>\r\n                }) : \"\"}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"col s12 m12 l10 blue-grey darken-2 min-height-100vh\">\r\n            {this.state.last_readings != null ?\r\n              <Cards \r\n              selectedDevice={this.state.selected_device != null ? this.state.selected_device.description : null} \r\n              readings={this.state.last_readings} \r\n              devices={this.state.devices} \r\n              clickHandler={this.handleChangeDevice} />\r\n              : \"\"}\r\n            {this.state.device_data != null && this.state.device_data !== undefined && this.state.device_data.length > 1 ?\r\n              <Graph data={this.state.device_data} title={this.state.selected_device.description} />\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container;","import './App.css';\r\n\r\nimport Container from './components/container';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Container />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}