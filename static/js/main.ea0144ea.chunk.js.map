{"version":3,"sources":["utils/date-time-utils.js","components/card.jsx","utils/format-utils.js","components/cards.jsx","components/line-chart.jsx","utils/array-utils.js","components/graph.jsx","utils/input-validation.js","utils/constants.js","utils/device.js","components/add-device.jsx","utils/device-data.js","components/container.jsx","App.js","index.js"],"names":["dateToUTC","date","Date","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","formatDateTime","locale","navigator","language","dateTime","Object","formattedDateString","Intl","DateTimeFormat","dateStyle","format","getTime","formattedTimeString","toTimeString","split","dateObjectToDateString","dateObject","offset","getTimezoneOffset","toISOString","isToday","now","Card","props","handleClick","bind","timestamp","undefined","reading","readingUTC","isTimestampMoreThan1HourAgo","this","e","clickHandler","title","className","selected","onClick","lastReadingWarning","temperature","numberToFormat","numberOfDecimalPlaces","NumberFormat","minimumFractionDigits","maximumFractionDigits","humidity","battery","style","height","Component","Cards","getDeviceDescription","serial","result","devices","filter","d","length","description","dateTimeIsWithinLast2Days","datetime","dt","twoDaysAgo","setDate","getDate","deviceCard","readings","map","device","selectedDevice","Plot","createPlotlyComponent","Plotly","LineChart","state","labels","label","xData","yData","dateData","chartData","options","text","reducedXVals","reduceXDataForTicks","loading","arr","numberOfElements","spaceBetweenElements","getFirstAndLastInArray","Math","floor","i","push","getNelementsEvenlySpaced","v","toString","numArray","min","apply","max","minY1","round","getMinOfArray","yDataLeft","maxY1","getMaxOfArray","minY2","yDataRight","maxY2","xValsWithGaps","timestamps","delta","timestampsCopy","index","abs","splice","insertGaps","setState","xVals","color","elements","point","radius","responsive","scales","y","type","position","grid","ticks","display","stepSize","y1","drawOnChartArea","x","previousProps","previousState","ceil","data","name","axisNameLeft","mode","hovertemplate","hoverTemplateLeft","connectgaps","yaxis","axisNameRight","hoverTemplateRight","config","locales","frDictionary","deDictionary","layout","margin","t","b","l","r","pad","autosize","legend","orientation","yanchor","xanchor","xaxis","autorange","tickmode","tickvals","getTickVals","ticktext","getTextVals","labelLeft","automargin","range","yaxis2","labelRight","overlaying","side","useResizeHandler","maxWidth","React","Graph","Array","isArray","temperatures","displayChart","isInputValid","value","minLength","regex","test","URL","getDevices","a","url","CONSTANTS","fetchData","hasOwnProperty","addDevice","key","headers","axios","post","timeout","method","AddDevice","handleChange","handleSubmit","addingDevice","addButtonDisabled","keyError","descriptionError","addDeviceError","new_device_key","new_device_serial","maxSerialNumber","forEach","M","updateTextFields","keyIsValid","descriptionIsValid","id","target","validity","valid","preventDefault","console","log","isFormValid","response","onSubmit","maxLength","required","onChange","htmlFor","handleCancel","getLastReading","device_serial","getData","start","end","replace","Container","handleChangeDevice","handleBurger","toggleAddDevice","displayGraphs","last_readings","selected_device","device_data","add_device","selected_date","newState","getData24Hours","innerText","toLowerCase","new_selected_device","getDataLast24Hours","start_date","end_date","startDate","Promise","all","defaultDate","setDefaultDate","maxDate","showDaysInNextAndPreviousMonths","newDate","handleDateChange","displayCards","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea0144ea.chunk.js","sourcesContent":["    /**\n     * Check if a given timestamp is more than one hour ago\n     * @param {number} timestamp \n     * @returns {boolean}\n     */\n    export const isTimestampMoreThan1HourAgo = (timestamp) => {\n      if (timestamp === undefined || timestamp == null) return true;\n      const reading = new Date(timestamp);\n      const readingUTC = dateToUTC(reading);\n      const now = new Date();\n      const nowUTC = dateToUTC(now);\n      const timezoneOffset = now.getTimezoneOffset();\n      const difference = (nowUTC - readingUTC) / 1000; // seconds\n\n      // 60 seconds * 60 minutes\n      if (difference + timezoneOffset > (60 * 60)) {\n        return true;\n      }\n      return false;\n  };\n\n  /**\n   * Convert Date object to unix timestamp\n   * @param {Date} date - Date object\n   * @returns {number} Returns the number of milliseconds between midnight, January 1, 1970 Universal Coordinated Time (UTC) and the specified date.\n   */\n  export const dateToUTC = (date) => {\n    return Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n  }\n\n    /**\n   * Format date to match user locale\n   * @param {Date | string} date - Date object or ISO 8601 date time string\n   * @returns {string | null} Formatted date and time as a string or null if an invalid date is passed\n   */\n  export const formatDate = (date) => {\n    if (!date) return null;\n    // Get user locale from browser\n    const locale = navigator.language;\n    let dateTime = null;\n    if (typeof date !== Object) {\n      dateTime = new Date(date + 'Z').getTime();\n    } else {\n      dateTime = new Date(date).getTime();\n    }\n    \n    return new Intl.DateTimeFormat([locale, 'en-GB'], { dateStyle: 'short' }).format(dateTime);\n  };\n\n  /**\n   * Format date and time to match user locale\n   * @param {Date | string} date - Date object or ISO 8601 date time string\n   * @returns {string | null} Formatted date and time as a string or null if an invalid date is passed\n   */\n      export const formatDateTime = (date) => {\n        if (!date) return null;\n        // Get user locale from browser\n        const locale = navigator.language;\n        let dateTime = null;\n        if (typeof date !== Object) {\n          dateTime = new Date(date + 'Z');\n        } else {\n          dateTime = new Date(date);\n        }\n        \n        const formattedDateString = new Intl.DateTimeFormat([locale, 'en-GB'], { dateStyle: 'short' }).format(dateTime.getTime());\n        const formattedTimeString = dateTime.toTimeString().split(' ')[0];\n\n\n        return `${formattedDateString} ${formattedTimeString}`;\n      };\n\n  /**\n   * Converts a Date object to a date string\n   * @example\n   * // returns 2023-02-01\n   * dateObjectToDateString(new Date(\"2023-02-01T07:26:06.161Z\"))\n   * @param {Date} dateObject - Date object\n   * @returns {string} date part of ISO 8601 date string\n   */\n  export const dateObjectToDateString = (dateObject)  => {\n    const offset = dateObject.getTimezoneOffset()\n    const dateWithOffset = new Date(dateObject.getTime() - (offset * 60 * 1000));\n    return dateWithOffset.toISOString().split('T')[0]\n  }\n\n  /**\n   * Is a given Date object today\n   * @param {Date} dateObject \n   * @returns {boolean}\n   */\n  export const isToday = (dateObject) => {\n    const now = new Date();\n    const dateTodayString = dateObjectToDateString(now);\n    const dateObjectString = dateObjectToDateString(dateObject);\n    return (dateTodayString === dateObjectString);\n  }\n\n  /**\n   * Format time to match user locale\n   * @param {Date | string} date - Date object or ISO 8601 date time string\n   * @returns {string | null} Formatted time as a string or null if an invalid date is passed\n   */\n  export const formatTime = (date) => {\n    if (!date) return null;\n    let dateTime = null;\n    if (typeof date !== Object) {\n      dateTime = new Date(date + 'Z');\n    } else {\n      dateTime = new Date(date);\n    }\n\n    //return new Intl.DateTimeFormat([locale, 'en-GB'], { timeStyle: 'long', hour12: false }).format(dateTime);\n    // new Date(\"2022-03-27 02:01\").toTimeString() -> \"02:01:00 GMT+0100 (British Summer Time)\"\n    return dateTime.toTimeString().split(' ')[0];\n  };\n\n  /**\n   * Insert gaps in an array of unix timestamps\n   * \n   * Inserts null values when a gap of more than <delta> milliseconds is detected\n   * @param {number[]} timestamps - an array of unix timestamps\n   * @param {number} delta - delta between timestamps in milliseconds\n   * @returns {Array} - Returns a new array with null values inserted where gaps have been detected\n   */\n  export const insertGaps = (timestamps, delta) => {\n    let timestampsCopy = [...timestamps];\n  \n    for (let index = 1; index < timestamps.length; index++) {\n      if (Math.abs(timestamps[index] - timestamps[index - 1]) > delta) {\n        timestampsCopy.splice(index - 1, 0, null)\n      }\n    }\n    return timestampsCopy;\n  }\n","import React, { Component } from 'react';\r\nimport { isTimestampMoreThan1HourAgo, formatDateTime } from '../utils/date-time-utils';\r\nimport  { formatNumberForLanguage } from '../utils/format-utils';\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  \r\n\r\n  // Check if last reading was over 1 hour ago\r\n  lastReadingWarning() {\r\n    return isTimestampMoreThan1HourAgo(this.props.date);\r\n  }\r\n\r\n  handleClick(e) {\r\n    this.props.clickHandler(this.props.title);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col s12 m5 l3\">\r\n        <div className={`card card-pointer blue-grey ${this.props.selected ? \"darken-3\" : \"darken-4\"}`} onClick={this.handleClick}>\r\n          <div className={`card grey ${this.props.selected ? \"darken-3\" : \"darken-4\"}`}>\r\n            <div className=\"card-content white-text\">\r\n              <span className=\"card-span\">{this.props.title ? this.props.title : \"Title\"}</span>\r\n              {this.lastReadingWarning() ? <span className=\"card-warning-icon\"><i className=\"material-icons yellow-text\">warning</i></span> : null}\r\n              <span className=\"card-title\">{this.props.temperature !== null || this.props.temperature !== undefined ? formatNumberForLanguage(this.props.temperature, navigator.language, 1) + \"\\u00b0C\" : \"Temperature Error\"}</span>\r\n              <div className={`card-humidity-battery`}>\r\n                <p className=\"card-span\">{this.props.humidity !== undefined && this.props.humidity > 0 ? this.props.humidity + \"%\" : \"\"}</p>\r\n                  <div className={`battery card-battery-icon ${this.props.battery ? \"\" : \"card-battery-hidden\"}`}>\r\n                    <span className=\"battery-level-text\">{this.props.battery + \"%\"}</span>\r\n                    <span className={`battery-level ${this.props.battery < 10 ? \"battery-level-alert\" : \"\"}`} style={{ height: this.props.battery < 10 ? \"20% \" : this.props.battery + \"%\" }}></span>\r\n                  </div>\r\n              </div>\r\n              <div className=\"divider\"></div>\r\n              <span className={`card-span ${this.lastReadingWarning() && \"red-text\"}`}>\r\n                {this.props.date ? formatDateTime(this.props.date) : \"Date Error\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;","export const formatNumberForLanguage = (numberToFormat, language, numberOfDecimalPlaces) => {\n  return Intl.NumberFormat([language, 'en-GB'], { minimumFractionDigits: numberOfDecimalPlaces, maximumFractionDigits: numberOfDecimalPlaces }).format(numberToFormat);\n}","import React, { Component } from 'react';\r\n\r\nimport Card from './card';\r\n\r\nclass Cards extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.clickHandler = this.clickHandler.bind(this);\r\n  }\r\n\r\n  clickHandler(e) {\r\n    this.props.clickHandler(e);\r\n  }\r\n\r\n  getDeviceDescription = (serial) => {\r\n    const result = this.props.devices.filter(d => serial === d.serial);\r\n    return result.length !== 0 ? result[0].description : \"\";\r\n  }\r\n\r\n  dateTimeIsWithinLast2Days = (datetime) => {\r\n    let dt = new Date(datetime);\r\n    let twoDaysAgo = new Date();\r\n    twoDaysAgo.setDate(twoDaysAgo.getDate() - 2);\r\n    return (dt.getTime() > twoDaysAgo);\r\n  }\r\n\r\n  deviceCard = () => {\r\n    if (this.props.readings === null) return;\r\n    if (this.props.readings[0] === undefined) return;\r\n    if (this.props.devices === undefined) return;\r\n    return  this.props.readings.map((device) => {\r\n      if (device !== undefined && device[0] !== undefined && this.dateTimeIsWithinLast2Days(device[0].timestamp)) {\r\n      return <Card\r\n      key={device[0].serial}\r\n      title={this.getDeviceDescription(device[0].serial)}\r\n      humidity={device[0].humidity}\r\n      temperature={device[0].temperature}\r\n      battery={device[0].battery}\r\n      date={device[0].timestamp} \r\n      clickHandler={this.clickHandler} \r\n      selected={this.props.selectedDevice === this.getDeviceDescription(device[0].serial)} />\r\n      } else { return \"\" }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        {this.props.devices !== undefined ? this.deviceCard() : \"\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\nimport Plotly from \"plotly.js-basic-dist\";\r\nimport * as frDictionary from \"plotly.js/lib/locales/fr\";\r\nimport * as deDictionary from \"plotly.js/lib/locales/de\";\r\nimport { formatTime, formatDateTime, insertGaps } from '../utils/date-time-utils';\r\nimport { getNelementsEvenlySpaced } from '../utils/array-utils';\r\n\r\nimport createPlotlyComponent from \"react-plotly.js/factory\";\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nclass LineChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      labels: [],\r\n      label: null,\r\n      xData: [],\r\n      yData: [],\r\n      dateData: [],\r\n      chartData: {},\r\n      options: {},\r\n      text: null,\r\n      reducedXVals: this.reduceXDataForTicks(),\r\n      loading: true,\r\n    }\r\n  }\r\n\r\n  reduceXDataForTicks() {\r\n    return getNelementsEvenlySpaced(this.props.xData, 4);\r\n  }\r\n\r\n  getTickVals() {\r\n    return this.state.reducedXVals.map(v => new Date(v).getTime().toString());\r\n  }\r\n\r\n  getTextVals() {\r\n    return this.state.reducedXVals.map(v => formatTime(v));\r\n  }\r\n\r\n  getMinOfArray(numArray) {\r\n    return Math.min.apply(null, numArray);\r\n  }\r\n\r\n  getMaxOfArray(numArray) {\r\n    return Math.max.apply(null, numArray);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const minY1 = Math.round(this.getMinOfArray(this.props.yDataLeft) - 1);\r\n    const maxY1 = Math.round(this.getMaxOfArray(this.props.yDataLeft) + 1);\r\n\r\n    const minY2 = Math.round(this.getMinOfArray(this.props.yDataRight) - 1);\r\n    const maxY2 = Math.round(this.getMaxOfArray(this.props.yDataRight) + 1);\r\n  \r\n    const text = this.props.xData.map(v => formatDateTime(v));\r\n    const xVals = this.props.xData.map(v => new Date(v + 'Z').getTime());\r\n    const xValsWithGaps = insertGaps(xVals, 40000);\r\n\r\n    this.setState({\r\n      minY1: minY1,\r\n      maxY1: maxY1,\r\n      text: text,\r\n      xVals: xValsWithGaps,\r\n      loading: false,\r\n      options: {\r\n        color: '#FFF',\r\n        elements: {\r\n          point: { radius: 0 }\r\n        },\r\n        responsive: true,\r\n        scales: {\r\n          y: {\r\n            type: 'linear',\r\n            position: 'left',\r\n            grid: {\r\n              color: 'rgba(255, 255, 255, 0.1)',\r\n            },\r\n            min: minY1,\r\n            max: maxY1,\r\n            ticks: {\r\n              display: true,\r\n              stepSize: 0.5,\r\n              color: 'rgba(255, 255, 255, 0.7)',\r\n            }\r\n          },\r\n          y1: {\r\n            type: 'linear',\r\n            position: 'right',\r\n            grid: {\r\n              drawOnChartArea: false, // only want the grid lines for one axis to show up\r\n            },\r\n            min: minY2,\r\n            max: maxY2,\r\n            ticks: {\r\n              display: true,\r\n              stepSize: 1,\r\n              color: 'rgba(255, 255, 255, 0.7)',\r\n            }\r\n          },\r\n          x: {\r\n            grid: {\r\n              color: 'rgba(255, 255, 255, 0.1)',\r\n            },\r\n            ticks: {\r\n              display: true,\r\n              color: 'rgba(255, 255, 255, 0.7)',\r\n            }\r\n          }\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(previousProps, previousState) {\r\n    if (previousProps.yDataLeft !== this.props.yDataLeft) {\r\n      const minY1 = Math.floor(this.getMinOfArray(this.props.yDataLeft));\r\n      const maxY1 = Math.ceil(this.getMaxOfArray(this.props.yDataLeft));\r\n      \r\n      this.setState({\r\n        minY1: minY1,\r\n        maxY1: maxY1,\r\n      })\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    let data = []\r\n    if (this.props.yDataRight) {\r\n      data = [\r\n        {\r\n          x: this.state.xVals,\r\n          y: this.props.yDataLeft,\r\n          name: this.props.axisNameLeft,\r\n          mode: 'lines',\r\n          hovertemplate: this.props.hoverTemplateLeft,\r\n          text: this.state.text,\r\n          type: 'scatter',\r\n          connectgaps: false,\r\n        },\r\n        {\r\n          x: this.state.xVals,\r\n          y: this.props.yDataRight,\r\n          yaxis: \"y2\",\r\n          name: this.props.axisNameRight,\r\n          mode: 'lines',\r\n          hovertemplate: this.props.hoverTemplateRight,\r\n          text: this.state.text,\r\n          type: 'scatter',\r\n          connectgaps: false,\r\n        },\r\n      ]\r\n    } else {\r\n      data = [\r\n        {\r\n          x: this.state.xVals,\r\n          y: this.props.yDataLeft,\r\n          name: this.props.axisNameLeft,\r\n          mode: 'lines',\r\n          hovertemplate: this.props.hoverTemplateLeft,\r\n          text: this.state.text,\r\n          connectgaps: false,\r\n        }\r\n      ]\r\n    }\r\n\r\n    const loading = this.state.loading;\r\n    return (\r\n      <div>\r\n      {loading ? <p>Loading...</p> : \r\n      <Plot\r\n        data={data}\r\n        config={{\r\n          locales: { 'fr': frDictionary, 'de' : deDictionary },\r\n          locale: navigator.language\r\n        }}\r\n        layout={{\r\n          margin: {\r\n            t: 90,\r\n            b: 90,\r\n            l: 70,\r\n            r: 70,\r\n            pad: 10\r\n          },\r\n\r\n          autosize: true,\r\n          legend: {\r\n            orientation: \"h\",\r\n            yanchor: \"bottom\",\r\n            y: 1.12,\r\n            xanchor: \"right\",\r\n            x: 1,\r\n          },\r\n          xaxis: {\r\n            type: \"linear\",\r\n            title: { text: 'Date/Time' },\r\n            autorange: true,\r\n            tickmode: \"array\",\r\n            tickvals: this.getTickVals(),\r\n            ticktext: this.getTextVals(),\r\n          },\r\n          yaxis: { title: this.props.labelLeft, automargin: true, range: [this.state.minY1, this.state.maxY1] },\r\n          yaxis2: {\r\n            title: this.props.labelRight,\r\n            range: [0, 100],\r\n            overlaying: 'y',\r\n            side: 'right',\r\n            automargin: true,\r\n          },\r\n        }}\r\n        useResizeHandler={true}\r\n        style={{ maxWidth: \"100%\", height: \"100%\" }}\r\n      />}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LineChart;","export const getFirstAndLastInArray = (arr) => {\n  if ((arr === undefined) || (arr === null)) return null;\n  const length = arr.length;\n  if (length < 1) return null;\n  if (length === 1) return arr;\n  const first = arr[0];\n  const last = arr[length - 1];\n  return [first, last];\n};\n\nexport const getNelementsEvenlySpaced = (arr, numberOfElements) => {\n  if ((arr === undefined) || (arr === null)) return null;\n  const length = arr.length;\n  let spaceBetweenElements = 0;\n  if (length < numberOfElements) return null;\n  if (numberOfElements < 2) return null;\n  if (length < 1) return null;\n  if (length === 1) return arr;\n  if (numberOfElements === 2) return getFirstAndLastInArray(arr);\n  if (numberOfElements % 2 === 1){ \n    spaceBetweenElements = Math.floor(length / numberOfElements) + 1;\n  } else {\n    spaceBetweenElements = Math.floor(length / numberOfElements);\n  }\n  let result = [];\n  for (let i = 0; i <= (length - spaceBetweenElements); i += spaceBetweenElements) {\n    result.push(arr[i]);\n  }\n  // Add the last element in the array\n  result.push(arr[length - 1]);\n  return result;\n};","import React, { Component } from 'react';\r\n\r\nimport LineChart from './line-chart';\r\n\r\nclass Graph extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    if (Array.isArray(this.props.data)) {\r\n      this.state = {\r\n        data: this.props.data,\r\n        temperatures: this.props.data.map(d => d.temperature),\r\n        humidity: this.props.data.map(d => d.humidity),\r\n        timestamps: this.props.data.map(d => d.timestamp)\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(previousProps, previousState) {\r\n    if (previousProps.data !== this.props.data && Array.isArray(this.props.data)) {\r\n      const temperatures = this.props.data.map(d => d.temperature);\r\n      const humidity = this.props.data.map(d => d.humidity);\r\n      const timestamps = this.props.data.map(d => d.timestamp);\r\n      this.setState({\r\n        temperatures: temperatures,\r\n        humidity: humidity,\r\n        timestamps: timestamps\r\n      })\r\n    }\r\n  }\r\n\r\n  displayChart() {\r\n    if (this.state === null) return \"\";\r\n    // Temperature only\r\n    if (this.state.humidity === null || this.state.humidity[0] === 0) {\r\n      return <LineChart\r\n      labelLeft=\"Temperature (℃)\"\r\n      xData={this.state.timestamps}\r\n      yDataLeft={this.state.temperatures}\r\n      axisNameLeft=\"Temperature\"\r\n      hoverTemplateLeft='%{text}<br>%{y:.1f}&deg;C<extra></extra>'\r\n      title={\" \"} \r\n      />  \r\n    }\r\n    // Temperature and humidity\r\n    return <LineChart\r\n    labelLeft=\"Temperature (℃)\"\r\n    labelRight=\"Humidity (%)\"\r\n    xData={this.state.timestamps}\r\n    yDataLeft={this.state.temperatures}\r\n    yDataRight={this.state.humidity}\r\n    axisNameLeft=\"Temperature\"\r\n    axisNameRight=\"Humidity\"\r\n    hoverTemplateLeft='%{text}<br>%{y:.1f}&deg;C<extra></extra>'\r\n    hoverTemplateRight='%{text}<br>%{y:.0f}%<extra></extra>'\r\n    title={\" \"} />\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m12 l12\">\r\n          <div className=\"card blue-grey darken-1\">\r\n            <div className=\"card-title white-text center-align\">\r\n              {this.props.title}\r\n            </div>\r\n            <div className=\"card-content white-text\">\r\n            {this.displayChart()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;","export const isInputValid = (value, minLength=3) => {\n  // Allow things like Seán with unicode characters\n  // Disallow things like <script>alert;\n  const regex = /[!\"#$%&'()*+,.£\\\\/:;<=>?@[\\]^_`{|}~]/;\n\n  if (value.length < minLength || regex.test(value) === true) {\n    return false;\n  }\n  return true;\n};","export const URL = 'https://hcm.techdude101.com';\r\n// export const URL = 'https://dev-hcm.herokuapp.com';","import axios from 'axios';\r\nimport * as CONSTANTS from './constants';\r\n\r\nexport const getDevices = async () => {\r\n  const url = `${CONSTANTS.URL}/device/`;\r\n  const data = await fetchData(url);\r\n  return data.hasOwnProperty('data') ? data.data : [];\r\n};\r\n\r\nexport const addDevice = async (serial, description, key) => {\r\n  const url = `${CONSTANTS.URL}/device/create`;\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'X-API-KEY': key\r\n  }\r\n  try {\r\n    return await axios.post(url, { serial: serial, description: description }, { headers: headers }, { timeout: 10_000 });\r\n  } catch {\r\n    return \"Error\";\r\n  }\r\n};\r\n\r\nexport async function fetchData(url, timeout=10_000) {\r\n  try {\r\n    return await axios({\r\n      method: 'get',\r\n      url: url,\r\n      timeout: timeout,\r\n    });\r\n  } catch {\r\n    return \"Error\";\r\n  }\r\n}\r\n","import React from 'react';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport { isInputValid } from '../utils/input-validation';\nimport { getDevices, addDevice } from '../utils/device';\n\nclass AddDevice extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    \n    this.state = {\n      addingDevice: false,\n      addButtonDisabled: true,\n      serial: 1,\n      description: '',\n      key: '',\n      keyError: false,\n      descriptionError: false,\n      addDeviceError: false,\n      new_device_key: null,\n      new_device_serial: null\n    }\n  }\n\n  async componentDidMount() {\n    const devices = await getDevices();\n    let maxSerialNumber = 0;\n\n    // Loop over devices to get the last serial number\n    devices.forEach((device) => {\n      maxSerialNumber = Math.max(device.serial, maxSerialNumber);\n    });\n    this.setState({serial: maxSerialNumber + 1})\n\n    M.updateTextFields(); // Fixes overlapping label issue\n  }\n\n  isFormValid() {\n    const key = this.state.key;\n    const description = this.state.description;\n\n    const keyIsValid = isInputValid(key);\n    const descriptionIsValid = isInputValid(description);\n    this.setState({ descriptionError: !descriptionIsValid })\n    this.setState({ keyError: !keyIsValid })\n\n    return keyIsValid && descriptionIsValid;\n  }\n\n  handleChange(e) {\n    const id = e.target.id;\n    const value = e.target.value;\n\n    if (isInputValid(value, 3) && e.target.validity.valid) {\n      if (id === 'description') this.setState({ description: value, descriptionError: false })\n      if (id === 'pass_or_key') this.setState({ key: value, keyError: false })\n    } else {\n      if (id === 'description') {\n        this.setState({ description: value, descriptionError: true })\n      }\n      if (id === 'pass_or_key') this.setState({ key: value, keyError: true })\n    }\n    this.setState({ addButtonDisabled: this.state.keyError || this.state.descriptionError });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"submit\");\n    const formIsValid = this.isFormValid(e);\n    if (formIsValid === false) {\n      return;\n    }\n    // Disable button after submitting the form\n    this.setState({ addButtonDisabled: true });\n\n    const response = await addDevice(this.state.serial, this.state.description, this.state.key);\n    console.log(response);\n    if (response.hasOwnProperty('data') && response.data.hasOwnProperty('key') && response.data.hasOwnProperty('serial')) {\n      this.setState({\n        new_device_key: response.data.key,\n        new_device_serial: response.data.serial\n      });\n    } else {\n      this.setState({ addDeviceError: true })\n    }\n    // Check if device was added successfully\n    // const devices = await getDevices();\n    return false;\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h4 className=\"white-text\">Add a Device</h4>\n        <form className=\"col s12\" onSubmit={this.handleSubmit}>\n          <div className=\"row\">\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <input name=\"description\" id=\"description\" type=\"text\" className=\"validate white-text\" maxLength=\"50\" required value={this.state.description} onChange={this.handleChange} />\n                <label htmlFor=\"description\">Device Description</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <input name=\"pass_or_key\" id=\"pass_or_key\" type=\"text\" className=\"validate white-text\" required value={this.state.key} onChange={this.handleChange} />\n                <label htmlFor=\"pass_or_key\">Admin API Key</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              {this.state.keyError || this.state.descriptionError ?\n                <div className=\"input-field col s12 red\">\n                  <p>Error - invalid description or API key</p> </div>\n                : null\n              }\n            </div>\n            <div className=\"row\">\n              {this.state.addDeviceError ?\n                <div className=\"input-field col s12 red\">\n                  <p>Error adding device</p></div>\n                : null\n              }\n            </div>\n            <div className=\"row\">\n              {this.state.new_device_key ?\n                <div className=\"input-field col s12\">\n                  <p>Device added successfully</p>\n                  <p>API key for device serial # {this.state.new_device_serial} = {this.state.new_device_key}</p> \n                  </div>\n                : null\n              }\n            </div>\n          </div>\n          <div>\n            <button className=\"waves-effect waves-light red btn-flat form-buttons\" onClick={this.props.handleCancel} >\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"waves-effect waves-light green btn-flat form-buttons\">\n              Add Device\n            </button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AddDevice;","import axios from 'axios';\r\nimport * as CONSTANTS from './constants';\r\n\r\nexport const getLastReading = async (device_serial) => {\r\n  const url = `${CONSTANTS.URL}/data/${device_serial}/last`;\r\n  const data = await fetchData(url);\r\n  return data.data;\r\n};\r\n\r\nexport const getData = async (device_serial, start=new Date(), end=new Date()) => {\r\n  const url = `${CONSTANTS.URL}/data/${device_serial}?start=${start.replace('Z', '')}&end=${end.replace('Z', '')}`;\r\n  const data = await fetchData(url);\r\n  return data.data;\r\n};\r\n\r\nexport async function fetchData(url, timeout=10000) {\r\n  try {\r\n    return await axios({\r\n      method: 'get',\r\n      url: url,\r\n      timeout: timeout,\r\n    });\r\n  } catch {\r\n    return \"Error\";\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport 'materialize-css/dist/js/materialize.min.js';\r\nimport { DatePicker } from \"react-materialize\";\r\n\r\nimport Cards from './cards';\r\nimport Graph from './graph';\r\nimport AddDevice from './add-device';\r\n\r\nimport { getDevices } from '../utils/device'\r\nimport { getLastReading, getData } from '../utils/device-data';\r\nimport { isToday } from '../utils/date-time-utils';\r\n\r\nclass Container extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChangeDevice = this.handleChangeDevice.bind(this);\r\n    this.handleBurger = this.handleBurger.bind(this);\r\n    this.toggleAddDevice = this.toggleAddDevice.bind(this);\r\n    this.displayGraphs = this.displayGraphs.bind(this);\r\n    this.state = {\r\n      devices: null,\r\n      last_readings: [],\r\n      selected_device: null,\r\n      device_data: null,\r\n      add_device: false,\r\n      selected_date: new Date(),\r\n      loading: false\r\n    }\r\n  }\r\n\r\n  handleBurger(e) {\r\n    console.log(\"burger\");\r\n  }\r\n\r\n  async handleDateChange(e) {\r\n    const value = e.target.value;\r\n\r\n    const newState = {...this.state}\r\n    newState[\"selected_date\"] = value;\r\n    newState[\"loading\"] = true;\r\n    this.setState(newState);\r\n\r\n    const data = await this.getData24Hours(this.state.selected_device.serial, value);\r\n    this.setState({\r\n      device_data: data,\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  async handleChangeDevice(e) {\r\n    // If add device is visible change the display to show the graphs\r\n    if (this.state.add_device) {\r\n      this.setState({add_device: false});\r\n    }\r\n    \r\n    let device = null;\r\n    if (e.hasOwnProperty('target')) {\r\n      device = e.target.innerText.toLowerCase();\r\n    } else {\r\n      device = e.toLowerCase();\r\n    }\r\n    // Check if the target device is different\r\n    if (device === this.state.selected_device.description.toLowerCase()) return;\r\n    // Update new selected device\r\n    let new_selected_device = this.state.devices.filter(d => d.description.toLowerCase() === device);\r\n    // Retrieve data from device\r\n    if (new_selected_device.length !== 0) {\r\n      // Array.filter returns array - get first element in the array\r\n      new_selected_device = new_selected_device[0];\r\n      const newState = {...this.state};\r\n      newState[\"loading\"] = true;\r\n      this.setState(newState);\r\n      \r\n      let data = null;\r\n      if (isToday(this.state.selected_date)) {\r\n        data = await this.getDataLast24Hours(new_selected_device.serial);\r\n      } else {\r\n        data = await this.getData24Hours(new_selected_device.serial, this.selected_date);\r\n      }\r\n      \r\n      this.setState({\r\n        selected_device: new_selected_device,\r\n        device_data: data,\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  async getDataLast24Hours(serial) {\r\n    if (serial === undefined) return;\r\n    if (serial == null) return;\r\n\r\n    let start_date = new Date();\r\n    start_date.setDate(start_date.getDate() - 1);\r\n\r\n    let end_date = new Date();\r\n    end_date.setDate(end_date.getDate() + 1);\r\n\r\n    return getData(serial, start_date.toISOString(), end_date.toISOString());\r\n  }\r\n\r\n  async getData24Hours(serial, startDate) {\r\n    if (serial === undefined) return;\r\n    if (serial == null) return;\r\n    if (startDate === undefined) return;\r\n    if (startDate === null) return;\r\n\r\n    let end_date = new Date(startDate);\r\n    end_date.setDate(startDate.getDate() + 1);\r\n\r\n    return getData(serial, startDate.toISOString(), end_date.toISOString());\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const devices = await getDevices();\r\n\r\n    this.setState({\r\n      devices: devices\r\n    });\r\n\r\n    if (this.state.devices !== undefined && this.state.devices !== null) {\r\n      this.setState({ selected_device: this.state.devices[0] })\r\n      const readings = await Promise.all(this.state.devices.map((device) => {\r\n        return getLastReading(device.serial);\r\n      }));\r\n      this.setState({\r\n        last_readings: readings\r\n      })\r\n     \r\n      if (this.state.selected_device !== undefined) {\r\n        const data = await this.getDataLast24Hours(this.state.selected_device.serial);\r\n        if (data !== undefined) {\r\n          this.setState({ device_data: data });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  displayGraphs() {\r\n    if (this.state.device_data != null && this.state.device_data !== undefined) {\r\n      if (this.state.device_data.length === 0) {\r\n        // If no data is available display \"no data\"\r\n        return <h1 className=\"white-text center-align\">No Data</h1>\r\n      } else if (this.state.loading) {\r\n        return <h1 className=\"white-text center-align\">Loading...</h1>\r\n      } else {\r\n        // Display a graph if data is available\r\n        return <Graph data={this.state.device_data} title={this.state.selected_device.description} />\r\n      }\r\n    }\r\n  }\r\n\r\n  displayCards() {\r\n    if (this.state.last_readings != null) {\r\n      return <Cards\r\n        selectedDevice={this.state.selected_device != null ? this.state.selected_device.description : null}\r\n        readings={this.state.last_readings}\r\n        devices={this.state.devices}\r\n        clickHandler={this.handleChangeDevice} />\r\n    }\r\n    else return null;\r\n  }\r\n\r\n  toggleAddDevice() {\r\n    const addDevice = this.state.add_device;\r\n    this.setState({ add_device: !addDevice });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row margin-none\">\r\n          {/* Only show on mobile */}\r\n          <div className=\"hide hide-on-med-and-up center-align\">\r\n            <h1 className=\"white-text margin-none header-title\">Dashboard</h1>\r\n            <div className=\"burger\" onClick={this.handleBurger}>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n            <ul className=\"mobileNav\">\r\n              {this.state.devices != null ? this.state.devices.map(device => {\r\n                return <li key={device.serial}><button onClick={this.handleChangeDevice} className=\"waves-effect waves-light btn grey darken-2 sidebar-links\">{device.description}</button></li>\r\n              }) : null}\r\n              <li><button className=\"waves-effect waves-light btn grey darken-2 sidebar-links\"\r\n                onClick={this.toggleAddDevice}>{this.state.add_device ? \"Show Graphs\" : \"Add Device\"}</button></li>\r\n            </ul>\r\n          </div>\r\n          {/* End only show on mobile */}\r\n          {/* Sidebar - only display on tablets and larger screens */}\r\n          <div className=\"col s12 m4 l2 blue-grey darken-3 min-height-100 hide-on-med-and-down\">\r\n            <div className=\"section white-text text-center\">\r\n              <h1 className=\"white-text sidebar-title\">Graphs</h1>\r\n              <div className=\"divider\"></div>\r\n              <DatePicker value={this.selected_date}\r\n                id=\"datePicker\" options={{\r\n                  defaultDate: this.state.selected_date,\r\n                  setDefaultDate: true,\r\n                  maxDate: new Date(),\r\n                  showDaysInNextAndPreviousMonths: false\r\n                }} onChange={(newDate) => {\r\n                  this.handleDateChange({\r\n                    target: {\r\n                      id: \"datePicker\",\r\n                      value: newDate\r\n                    }\r\n                  });\r\n                }} />\r\n              <ul>\r\n                {this.state.devices != null ? this.state.devices.map(device => {\r\n                  return <li key={device.serial}><button onClick={this.handleChangeDevice} className=\"waves-effect waves-light btn grey darken-2 sidebar-links\">{device.description}</button></li>\r\n                }) : null}\r\n                <div className=\"divider\"></div>\r\n                <li><button className=\"waves-effect waves-light btn green darken-4 sidebar-links\"\r\n                  onClick={this.toggleAddDevice}>{this.state.add_device ? \"Show Graphs\" : \"Add Device\"}</button></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"col s12 m12 l10 blue-grey darken-2 min-height-100vh\">\r\n            {this.displayCards()}\r\n            {this.state.add_device ?\r\n              <AddDevice handleCancel={this.toggleAddDevice}/>\r\n              :\r\n              this.displayGraphs()\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container;","import './App.css';\r\n\r\nimport Container from './components/container';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Container />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}