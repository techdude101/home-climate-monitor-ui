{"version":3,"sources":["components/card.jsx","components/cards.jsx","components/line-chart.jsx","components/graph.jsx","utils/input-validation.js","utils/constants.js","utils/device.js","components/add-device.jsx","utils/device-data.js","components/container.jsx","App.js","index.js"],"names":["Card","props","handleClick","bind","d","Date","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","reading","this","date","readingUTC","dateToUTC","now","e","clickHandler","title","locale","navigator","language","Intl","DateTimeFormat","dateStyle","timeStyle","hour12","format","className","selected","onClick","lastReadingWarning","temperature","undefined","toFixed","battery","humidity","style","height","formatDate","Component","Cards","getDeviceDescription","serial","result","devices","filter","length","description","dateTimeIsWithinLast2Days","datetime","dt","twoDaysAgo","setDate","getDate","getTime","deviceCard","readings","map","device","timestamp","selectedDevice","Plot","createPlotlyComponent","Plotly","LineChart","state","labels","label","xData","yData","dateData","chartData","options","numArray","Math","min","apply","max","minY1","floor","getMinOfArray","yDataLeft","maxY1","ceil","getMaxOfArray","minY2","round","yDataRight","maxY2","setState","color","elements","point","radius","responsive","scales","y","type","position","grid","ticks","display","stepSize","y1","drawOnChartArea","x","previousProps","previousState","data","name","axisNameLeft","mode","hovertemplate","hoverTemplateLeft","yaxis","axisNameRight","hoverTemplateRight","layout","margin","t","b","l","r","pad","autosize","legend","orientation","yanchor","xanchor","xaxis","text","autorange","labelLeft","automargin","range","yaxis2","labelRight","overlaying","side","hovermode","useResizeHandler","maxWidth","React","Graph","Array","isArray","temperatures","timestamps","displayChart","isInputValid","value","minLength","regex","test","URL","getDevices","a","url","CONSTANTS","fetchData","hasOwnProperty","addDevice","key","headers","axios","post","timeout","method","AddDevice","handleChange","handleSubmit","addingDevice","addButtonDisabled","keyError","descriptionError","addDeviceError","new_device_key","new_device_serial","maxSerialNumber","forEach","M","updateTextFields","keyIsValid","descriptionIsValid","id","target","validity","valid","preventDefault","console","log","isFormValid","response","onSubmit","maxLength","required","onChange","htmlFor","handleCancel","getLastReading","device_serial","getData","start","end","replace","Container","handleChangeDevice","handleBurger","toggleAddDevice","displayGraphs","last_readings","selected_device","device_data","add_device","innerText","toLowerCase","new_selected_device","getDataLast24Hours","start_date","end_date","toISOString","document","addEventListener","elems","querySelectorAll","defaultDate","setDefaultDate","Datepicker","init","Promise","all","displayCards","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5d6f1a57.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  dateToUTC(d) {\r\n    return Date.UTC(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate(), d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds());\r\n  }\r\n\r\n  // Check if last reading was over 1 hour ago\r\n  lastReadingWarning() {\r\n    const reading = new Date(this.props.date);\r\n    const readingUTC = this.dateToUTC(reading);\r\n    const now = new Date();\r\n    const nowUTC = this.dateToUTC(now);\r\n    const difference = (nowUTC - readingUTC) / 1000; // seconds\r\n\r\n    // 60 seconds * 60 minutes\r\n    if (difference > (60 * 60)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  handleClick(e) {\r\n    this.props.clickHandler(this.props.title);\r\n  }\r\n\r\n  formatDate(date) {\r\n    // Get user locale from browser\r\n    const locale = navigator.language;\r\n\r\n    return new Intl.DateTimeFormat(locale, { dateStyle: 'short', timeStyle: 'short', hour12: false }).format(new Date(date));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col s12 m5 l3\">\r\n        <div className={`card card-pointer blue-grey ${this.props.selected ? \"darken-3\" : \"darken-4\"}`} onClick={this.handleClick}>\r\n          <div className={`card grey ${this.props.selected ? \"darken-3\" : \"darken-4\"}`}>\r\n            <div className=\"card-content white-text\">\r\n              <span className=\"card-span\">{this.props.title ? this.props.title : \"Title\"}</span>\r\n              {this.lastReadingWarning() ? <span className=\"card-warning-icon\"><i className=\"material-icons yellow-text\">warning</i></span> : null}\r\n              <span className=\"card-title\">{this.props.temperature !== null || this.props.temperature !== undefined ? this.props.temperature.toFixed(1) + \"\\u00b0C\" : \"Temperature Error\"}</span>\r\n              <div className={`card-humidity-battery ${this.props.battery === 0 ? \"card-battery-hidden\" : \"\"}`}>\r\n                <p className=\"card-span\">{this.props.humidity ? this.props.humidity + \"%\" : \"\"}</p>\r\n                  <div className=\"battery card-battery-icon\">\r\n                    <span className=\"battery-level-text\">{this.props.battery + \"%\"}</span>\r\n                    <span className={`battery-level ${this.props.battery < 10 ? \"battery-level-alert\" : \"\"}`} style={{ height: this.props.battery < 10 ? \"20% \" : this.props.battery + \"%\" }}></span>\r\n                  </div>\r\n              </div>\r\n              <div className=\"divider\"></div>\r\n              <span className={`card-span ${this.lastReadingWarning() && \"red-text\"}`}>\r\n                {this.props.date ? this.formatDate(this.props.date) : \"Date Error\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\n\r\nimport Card from './card';\r\n\r\nclass Cards extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.clickHandler = this.clickHandler.bind(this);\r\n  }\r\n\r\n  clickHandler(e) {\r\n    this.props.clickHandler(e);\r\n  }\r\n\r\n  getDeviceDescription = (serial) => {\r\n    const result = this.props.devices.filter(d => serial === d.serial);\r\n    return result.length !== 0 ? result[0].description : \"\";\r\n  }\r\n\r\n  dateTimeIsWithinLast2Days = (datetime) => {\r\n    let dt = new Date(datetime);\r\n    let twoDaysAgo = new Date();\r\n    twoDaysAgo.setDate(twoDaysAgo.getDate() - 2);\r\n    return (dt.getTime() > twoDaysAgo);\r\n  }\r\n\r\n  deviceCard = () => {\r\n    if (this.props.readings === null) return;\r\n    if (this.props.readings[0] === undefined) return;\r\n    if (this.props.devices === undefined) return;\r\n    return  this.props.readings.map((device) => {\r\n      if (device !== undefined && device[0] !== undefined && this.dateTimeIsWithinLast2Days(device[0].timestamp)) {\r\n      return <Card\r\n      key={device[0].serial}\r\n      title={this.getDeviceDescription(device[0].serial)}\r\n      humidity={device[0].humidity}\r\n      temperature={device[0].temperature}\r\n      battery={device[0].battery}\r\n      date={device[0].timestamp} \r\n      clickHandler={this.clickHandler} \r\n      selected={this.props.selectedDevice === this.getDeviceDescription(device[0].serial)} />\r\n      } else { return \"\" }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        {this.props.devices !== undefined ? this.deviceCard() : \"\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\nimport Plotly from \"plotly.js-basic-dist\";\r\n\r\nimport createPlotlyComponent from \"react-plotly.js/factory\";\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nclass LineChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      labels: [],\r\n      label: null,\r\n      xData: [],\r\n      yData: [],\r\n      dateData: [],\r\n      chartData: {},\r\n      options: {},\r\n    }\r\n  }\r\n\r\n  getMinOfArray(numArray) {\r\n    return Math.min.apply(null, numArray);\r\n  }\r\n\r\n  getMaxOfArray(numArray) {\r\n    return Math.max.apply(null, numArray);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const minY1 = Math.floor(this.getMinOfArray(this.props.yDataLeft));\r\n    const maxY1 = Math.ceil(this.getMaxOfArray(this.props.yDataLeft));\r\n\r\n    const minY2 = Math.round(this.getMinOfArray(this.props.yDataRight) - 1);\r\n    const maxY2 = Math.round(this.getMaxOfArray(this.props.yDataRight) + 1);\r\n\r\n    this.setState({\r\n      minY1: minY1,\r\n      maxY1: maxY1,\r\n      options: {\r\n        color: '#FFF',\r\n        elements: {\r\n          point: { radius: 0 }\r\n        },\r\n        responsive: true,\r\n        scales: {\r\n          y: {\r\n            type: 'linear',\r\n            position: 'left',\r\n            grid: {\r\n              color: 'rgba(255, 255, 255, 0.1)',\r\n            },\r\n            min: minY1,\r\n            max: maxY1,\r\n            ticks: {\r\n              display: true,\r\n              stepSize: 0.5,\r\n              color: 'rgba(255, 255, 255, 0.7)',\r\n            }\r\n          },\r\n          y1: {\r\n            type: 'linear',\r\n            position: 'right',\r\n            grid: {\r\n              drawOnChartArea: false, // only want the grid lines for one axis to show up\r\n            },\r\n            min: minY2,\r\n            max: maxY2,\r\n            ticks: {\r\n              display: true,\r\n              stepSize: 1,\r\n              color: 'rgba(255, 255, 255, 0.7)',\r\n            }\r\n          },\r\n          x: {\r\n            grid: {\r\n              color: 'rgba(255, 255, 255, 0.1)',\r\n            },\r\n            ticks: {\r\n              display: true,\r\n              color: 'rgba(255, 255, 255, 0.7)',\r\n            }\r\n          }\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(previousProps, previousState) {\r\n    if (previousProps.yDataLeft !== this.props.yDataLeft) {\r\n      const minY1 = Math.floor(this.getMinOfArray(this.props.yDataLeft));\r\n      const maxY1 = Math.ceil(this.getMaxOfArray(this.props.yDataLeft));\r\n      this.setState({\r\n        minY1: minY1,\r\n        maxY1: maxY1\r\n      })\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    let data = []\r\n    if (this.props.yDataRight) {\r\n      data = [\r\n        {\r\n          x: this.props.xData,\r\n          y: this.props.yDataLeft,\r\n          name: this.props.axisNameLeft,\r\n          mode: 'lines',\r\n          hovertemplate: this.props.hoverTemplateLeft\r\n        },\r\n        {\r\n          x: this.props.xData,\r\n          y: this.props.yDataRight,\r\n          yaxis: \"y2\",\r\n          name: this.props.axisNameRight,\r\n          mode: 'lines',\r\n          hovertemplate: this.props.hoverTemplateRight,\r\n        },\r\n      ]\r\n    } else {\r\n      data = [\r\n        {\r\n          x: this.props.xData,\r\n          y: this.props.yDataLeft,\r\n          name: this.props.axisNameLeft,\r\n          mode: 'lines',\r\n          hovertemplate: this.props.hoverTemplateLeft\r\n        },\r\n      ]\r\n    }\r\n\r\n    return (\r\n      <Plot\r\n        data={data}\r\n        layout={{\r\n          margin: {\r\n            t: 90,\r\n            b: 90,\r\n            l: 70,\r\n            r: 70,\r\n            pad: 10\r\n          },\r\n\r\n          autosize: true,\r\n          legend: {\r\n            orientation: \"h\",\r\n            yanchor: \"bottom\",\r\n            y: 1.12,\r\n            xanchor: \"right\",\r\n            x: 1,\r\n          },\r\n          xaxis: {\r\n            title: { text: 'Date/Time' },\r\n            autorange: \"false\",\r\n            type: 'date',\r\n          },\r\n          yaxis: { title: this.props.labelLeft, automargin: true, range: [this.state.minY1, this.state.maxY1] },\r\n          yaxis2: {\r\n            title: this.props.labelRight,\r\n            range: [0, 100],\r\n            overlaying: 'y',\r\n            side: 'right',\r\n            automargin: true,\r\n          },\r\n          hovermode: \"x unified\",\r\n        }}\r\n        useResizeHandler={true}\r\n        style={{ maxWidth: \"100%\", height: \"100%\" }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default LineChart;","import React, { Component } from 'react';\r\n\r\nimport LineChart from './line-chart';\r\n\r\nclass Graph extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    if (Array.isArray(this.props.data)) {\r\n      this.state = {\r\n        data: this.props.data,\r\n        temperatures: this.props.data.map(d => d.temperature),\r\n        humidity: this.props.data.map(d => d.humidity),\r\n        timestamps: this.props.data.map(d => d.timestamp)\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(previousProps, previousState) {\r\n    if (previousProps.data !== this.props.data && Array.isArray(this.props.data)) {\r\n      const temperatures = this.props.data.map(d => d.temperature);\r\n      const humidity = this.props.data.map(d => d.humidity);\r\n      const timestamps = this.props.data.map(d => d.timestamp);\r\n      this.setState({\r\n        temperatures: temperatures,\r\n        humidity: humidity,\r\n        timestamps: timestamps\r\n      })\r\n    }\r\n  }\r\n\r\n  displayChart() {\r\n    if (this.state === null) return \"\";\r\n    if (this.state.humidity === null || this.state.humidity[0] === 0) {\r\n      return <LineChart\r\n      labelLeft=\"Temperature (℃)\"\r\n      xData={this.state.timestamps}\r\n      yDataLeft={this.state.temperatures}\r\n      axisNameLeft=\"Temperature\"\r\n      hoverTemplateLeft='%{y:.1f}&deg;C'\r\n      title={\" \"} \r\n      />  \r\n    }\r\n    return <LineChart\r\n    labelLeft=\"Temperature (℃)\"\r\n    labelRight=\"Humidity (%)\"\r\n    xData={this.state.timestamps}\r\n    yDataLeft={this.state.temperatures}\r\n    yDataRight={this.state.humidity}\r\n    axisNameLeft=\"Temperature\"\r\n    axisNameRight=\"Humidity\"\r\n    hoverTemplateLeft='%{y:.1f}&deg;C'\r\n    hoverTemplateRight='%{y:.0f}%'\r\n    title={\" \"} />\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m12 l12\">\r\n          <div className=\"card blue-grey darken-1\">\r\n            <div className=\"card-title white-text center-align hide-on-large-only\">\r\n              {this.props.title}\r\n            </div>\r\n            <div className=\"card-content white-text\">\r\n            {this.displayChart()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;","export const isInputValid = (value, minLength=3) => {\n  // Allow things like Seán with unicode characters\n  // Disallow things like <script>alert;\n  const regex = /[!\"#$%&'()*+,.£\\\\/:;<=>?@[\\]^_`{|}~]/;\n\n  if (value.length < minLength || regex.test(value) === true) {\n    return false;\n  }\n  return true;\n};","export const URL = 'https://home-climate-monitor.herokuapp.com';\n// export const URL = 'https://dev-hcm.herokuapp.com';","import axios from 'axios';\r\nimport * as CONSTANTS from './constants';\r\n\r\nexport const getDevices = async () => {\r\n  const url = `${CONSTANTS.URL}/device/`;\r\n  const data = await fetchData(url);\r\n  return data.hasOwnProperty('data') ? data.data : [];\r\n};\r\n\r\nexport const addDevice = async (serial, description, key) => {\r\n  const url = `${CONSTANTS.URL}/device/create`;\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'X-API-KEY': key\r\n  }\r\n  try {\r\n    return await axios.post(url, { serial: serial, description: description }, { headers: headers }, { timeout: 10_000 });\r\n  } catch {\r\n    return \"Error\";\r\n  }\r\n};\r\n\r\nexport async function fetchData(url, timeout=10_000) {\r\n  try {\r\n    return await axios({\r\n      method: 'get',\r\n      url: url,\r\n      timeout: timeout,\r\n    });\r\n  } catch {\r\n    return \"Error\";\r\n  }\r\n}\r\n","import React from 'react';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport { isInputValid } from '../utils/input-validation';\nimport { getDevices, addDevice } from '../utils/device';\n\nclass AddDevice extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    \n    this.state = {\n      addingDevice: false,\n      addButtonDisabled: true,\n      serial: 1,\n      description: '',\n      key: '',\n      keyError: false,\n      descriptionError: false,\n      addDeviceError: false,\n      new_device_key: null,\n      new_device_serial: null\n    }\n  }\n\n  async componentDidMount() {\n    const devices = await getDevices();\n    let maxSerialNumber = 0;\n\n    // Loop over devices to get the last serial number\n    devices.forEach((device) => {\n      maxSerialNumber = Math.max(device.serial, maxSerialNumber);\n    });\n    this.setState({serial: maxSerialNumber + 1})\n\n    M.updateTextFields(); // Fixes overlapping label issue\n  }\n\n  isFormValid() {\n    const key = this.state.key;\n    const description = this.state.description;\n\n    const keyIsValid = isInputValid(key);\n    const descriptionIsValid = isInputValid(description);\n    this.setState({ descriptionError: !descriptionIsValid })\n    this.setState({ keyError: !keyIsValid })\n\n    return keyIsValid && descriptionIsValid;\n  }\n\n  handleChange(e) {\n    const id = e.target.id;\n    const value = e.target.value;\n\n    if (isInputValid(value, 3) && e.target.validity.valid) {\n      if (id === 'description') this.setState({ description: value, descriptionError: false })\n      if (id === 'pass_or_key') this.setState({ key: value, keyError: false })\n    } else {\n      if (id === 'description') {\n        this.setState({ description: value, descriptionError: true })\n      }\n      if (id === 'pass_or_key') this.setState({ key: value, keyError: true })\n    }\n    this.setState({ addButtonDisabled: this.state.keyError || this.state.descriptionError });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"submit\");\n    const formIsValid = this.isFormValid(e);\n    if (formIsValid === false) {\n      return;\n    }\n    // Disable button after submitting the form\n    this.setState({ addButtonDisabled: true });\n\n    const response = await addDevice(this.state.serial, this.state.description, this.state.key);\n    console.log(response);\n    if (response.hasOwnProperty('data') && response.data.hasOwnProperty('key') && response.data.hasOwnProperty('serial')) {\n      this.setState({\n        new_device_key: response.data.key,\n        new_device_serial: response.data.serial\n      });\n    } else {\n      this.setState({ addDeviceError: true })\n    }\n    // Check if device was added successfully\n    // const devices = await getDevices();\n    return false;\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h4 className=\"white-text\">Add a Device</h4>\n        <form className=\"col s12\" onSubmit={this.handleSubmit}>\n          <div className=\"row\">\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <input name=\"description\" id=\"description\" type=\"text\" className=\"validate white-text\" maxLength=\"50\" required value={this.state.description} onChange={this.handleChange} />\n                <label htmlFor=\"description\">Device Description</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <input name=\"pass_or_key\" id=\"pass_or_key\" type=\"text\" className=\"validate white-text\" required value={this.state.key} onChange={this.handleChange} />\n                <label htmlFor=\"pass_or_key\">Admin API Key</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              {this.state.keyError || this.state.descriptionError ?\n                <div className=\"input-field col s12 red\">\n                  <p>Error - invalid description or API key</p> </div>\n                : null\n              }\n            </div>\n            <div className=\"row\">\n              {this.state.addDeviceError ?\n                <div className=\"input-field col s12 red\">\n                  <p>Error adding device</p></div>\n                : null\n              }\n            </div>\n            <div className=\"row\">\n              {this.state.new_device_key ?\n                <div className=\"input-field col s12\">\n                  <p>Device added successfully</p>\n                  <p>API key for device serial # {this.state.new_device_serial} = {this.state.new_device_key}</p> \n                  </div>\n                : null\n              }\n            </div>\n          </div>\n          <div>\n            <button className=\"waves-effect waves-light red btn-flat form-buttons\" onClick={this.props.handleCancel} >\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"waves-effect waves-light green btn-flat form-buttons\">\n              Add Device\n            </button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AddDevice;","import axios from 'axios';\r\nimport * as CONSTANTS from './constants';\r\n\r\nexport const getLastReading = async (device_serial) => {\r\n  const url = `${CONSTANTS.URL}/data/${device_serial}/last`;\r\n  const data = await fetchData(url);\r\n  // console.log(data)\r\n  return data.data;\r\n};\r\n\r\nexport const getData = async (device_serial, start=new Date(), end=new Date()) => {\r\n  const url = `${CONSTANTS.URL}/data/${device_serial}?start=${start.replace('Z', '')}&end=${end.replace('Z', '')}`;\r\n  const data = await fetchData(url);\r\n  // console.log(data)\r\n  return data.data;\r\n};\r\n\r\nexport async function fetchData(url, timeout=10000) {\r\n  try {\r\n    return await axios({\r\n      method: 'get',\r\n      url: url,\r\n      timeout: timeout,\r\n    });\r\n  } catch {\r\n    return \"Error\";\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nimport Cards from './cards';\r\nimport Graph from './graph';\r\nimport AddDevice from './add-device';\r\n\r\nimport { getDevices } from '../utils/device'\r\nimport { getLastReading, getData } from '../utils/device-data';\r\n\r\nclass Container extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChangeDevice = this.handleChangeDevice.bind(this);\r\n    this.handleBurger = this.handleBurger.bind(this);\r\n    this.toggleAddDevice = this.toggleAddDevice.bind(this);\r\n    this.displayGraphs = this.displayGraphs.bind(this);\r\n    this.state = {\r\n      devices: null,\r\n      last_readings: [],\r\n      selected_device: null,\r\n      device_data: null,\r\n      add_device: false\r\n    }\r\n  }\r\n\r\n  handleBurger(e) {\r\n    console.log(\"burger\");\r\n  }\r\n\r\n  async handleChangeDevice(e) {\r\n    // If add device is visible change the display to show the graphs\r\n    if (this.state.add_device) {\r\n      this.setState({add_device: false});\r\n    }\r\n    \r\n    let device = null;\r\n    if (e.hasOwnProperty('target')) {\r\n      device = e.target.innerText.toLowerCase();\r\n    } else {\r\n      device = e.toLowerCase();\r\n    }\r\n    // Check if the target device is different\r\n    if (device === this.state.selected_device.description.toLowerCase()) return;\r\n    // Update new selected device\r\n    let new_selected_device = this.state.devices.filter(d => d.description.toLowerCase() === device);\r\n    // Retrieve data from device\r\n    if (new_selected_device.length !== 0) {\r\n      // Array.filter returns array - get first element in the array\r\n      new_selected_device = new_selected_device[0];\r\n      const data = await this.getDataLast24Hours(new_selected_device.serial);\r\n      this.setState({\r\n        selected_device: new_selected_device,\r\n        device_data: data\r\n      });\r\n    }\r\n  }\r\n\r\n  async getDataLast24Hours(serial) {\r\n    if (serial === undefined) return;\r\n    if (serial == null) return;\r\n    let start_date = new Date();\r\n    start_date.setDate(start_date.getDate() - 1);\r\n    let end_date = new Date();\r\n    end_date.setDate(end_date.getDate() + 1);\r\n\r\n    return getData(serial, start_date.toISOString(), end_date.toISOString());\r\n  }\r\n\r\n  async componentDidMount() {\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n      var elems = document.querySelectorAll('.datepicker');\r\n      const options = {\r\n        defaultDate: new Date(),\r\n        setDefaultDate: true,\r\n      }\r\n      var instances = M.Datepicker.init(elems, options);\r\n    });\r\n    const devices = await getDevices();\r\n\r\n    this.setState({\r\n      devices: devices\r\n    });\r\n\r\n    if (this.state.devices !== undefined && this.state.devices !== null) {\r\n      this.setState({ selected_device: this.state.devices[0] })\r\n      const readings = await Promise.all(this.state.devices.map((device) => {\r\n        return getLastReading(device.serial);\r\n      }));\r\n      this.setState({\r\n        last_readings: readings\r\n      })\r\n\r\n      let start_date = new Date();\r\n      start_date.setDate(start_date.getDate() - 1);\r\n      let end_date = new Date();\r\n      end_date.setDate(end_date.getDate() + 1);\r\n      if (this.state.selected_device !== undefined) {\r\n        const data = await getData(this.state.selected_device.serial, start_date.toISOString(), end_date.toISOString());\r\n        if (data !== undefined) {\r\n          this.setState({ device_data: data });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  displayGraphs() {\r\n    if (this.state.device_data != null && this.state.device_data !== undefined) {\r\n      if (this.state.device_data.length === 0) {\r\n        // If no data is available display \"no data\"\r\n        return <h1 className=\"white-text center-align\">No Data</h1>\r\n      } else {\r\n        // Display a graph if data is available\r\n        return <Graph data={this.state.device_data} title={this.state.selected_device.description} />\r\n      }\r\n    }\r\n  }\r\n\r\n  displayCards() {\r\n    if (this.state.last_readings != null) {\r\n      return <Cards\r\n        selectedDevice={this.state.selected_device != null ? this.state.selected_device.description : null}\r\n        readings={this.state.last_readings}\r\n        devices={this.state.devices}\r\n        clickHandler={this.handleChangeDevice} />\r\n    }\r\n    else return null;\r\n  }\r\n\r\n  toggleAddDevice() {\r\n    const addDevice = this.state.add_device;\r\n    this.setState({ add_device: !addDevice });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row margin-none\">\r\n          {/* Only show on mobile */}\r\n          <div className=\"hide hide-on-med-and-up center-align\">\r\n            <h1 className=\"white-text margin-none header-title\">Dashboard</h1>\r\n            <div className=\"burger\" onClick={this.handleBurger}>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n            <ul className=\"mobileNav\">\r\n              {this.state.devices != null ? this.state.devices.map(device => {\r\n                return <li key={device.serial}><button onClick={this.handleChangeDevice} className=\"waves-effect waves-light btn grey darken-2 sidebar-links\">{device.description}</button></li>\r\n              }) : null}\r\n              <li><button className=\"waves-effect waves-light btn grey darken-2 sidebar-links\"\r\n                onClick={this.toggleAddDevice}>{this.state.add_device ? \"Show Graphs\" : \"Add Device\"}</button></li>\r\n            </ul>\r\n          </div>\r\n          {/* End only show on mobile */}\r\n          {/* Sidebar - only display on tablets and larger screens */}\r\n          <div className=\"col s12 m4 l2 blue-grey darken-3 min-height-100 hide-on-med-and-down\">\r\n            <div className=\"section white-text text-center\">\r\n              <h1 className=\"white-text sidebar-title\">Graphs</h1>\r\n              <div className=\"divider\"></div>\r\n              <input type=\"text\" className=\"datepicker datepicker-override\"></input>\r\n              <ul>\r\n                {this.state.devices != null ? this.state.devices.map(device => {\r\n                  return <li key={device.serial}><button onClick={this.handleChangeDevice} className=\"waves-effect waves-light btn grey darken-2 sidebar-links\">{device.description}</button></li>\r\n                }) : null}\r\n                <div className=\"divider\"></div>\r\n                <li><button className=\"waves-effect waves-light btn green darken-4 sidebar-links\"\r\n                  onClick={this.toggleAddDevice}>{this.state.add_device ? \"Show Graphs\" : \"Add Device\"}</button></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"col s12 m12 l10 blue-grey darken-2 min-height-100vh\">\r\n            {this.displayCards()}\r\n            {this.state.add_device ?\r\n              <AddDevice handleCancel={this.toggleAddDevice}/>\r\n              :\r\n              this.displayGraphs()\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container;","import './App.css';\r\n\r\nimport Container from './components/container';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Container />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}