{"version":3,"sources":["components/card.jsx","components/cards.jsx","components/line-chart.jsx","components/graph.jsx","utils/constants.js","utils/device.js","utils/device-data.js","components/container.jsx","App.js","index.js"],"names":["Card","date","locale","navigator","language","Intl","DateTimeFormat","dateStyle","timeStyle","hour12","format","Date","className","this","props","title","temperature","humidity","formatDate","Component","Cards","getDeviceDescription","serial","devices","filter","d","description","deviceCard","readings","undefined","map","device","device_id","timestamp","Plot","createPlotlyComponent","Plotly","LineChart","state","labels","label","xData","yData","dateData","chartData","options","numArray","Math","min","apply","max","minY1","round","getMinOfArray","yDataLeft","maxY1","getMaxOfArray","minY2","yDataRight","maxY2","setState","color","elements","point","radius","responsive","scales","y","type","position","grid","ticks","display","stepSize","y1","drawOnChartArea","x","data","name","mode","hovertemplate","yaxis","layout","margin","t","b","l","r","pad","autosize","legend","orientation","yanchor","xanchor","xaxis","text","autorange","automargin","yaxis2","range","overlaying","side","hovermode","useResizeHandler","style","maxWidth","height","React","Graph","temperatures","timestamps","previousProps","previousState","labelLeft","labelRight","URL","getDevices","a","url","CONSTANTS","fetchData","hasOwnProperty","timeout","axios","method","getLastReading","device_serial","getData","start","end","replace","Container","handleChangeDevice","bind","last_readings","selected_device","device_data","e","target","new_selected_device","length","getDataLast24Hours","start_date","setDate","getDate","end_date","console","log","toISOString","document","addEventListener","elems","querySelectorAll","defaultDate","setDefaultDate","M","Datepicker","init","Promise","all","onClick","id","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c295e96e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Card extends Component {\n  formatDate(date) {\n    // Get user locale from browser\n    const locale = navigator.language;\n\n    return new Intl.DateTimeFormat(locale, { dateStyle: 'short', timeStyle: 'short', hour12: false }).format(new Date(date));\n  }\n  render() {\n    return (\n      <div className=\"col s12 m5 l3\">\n        <div className=\"card blue-grey darken-4\">\n          <div className=\"card blue-grey darken-4\">\n            <div className=\"card-content white-text\">\n              <span className=\"card-span\">{this.props.title ? this.props.title : \"Title\"}</span>\n              <span className=\"card-title\">{this.props.temperature ? this.props.temperature + \"\\u00b0C\" : \"Temperature Error\"}</span>\n              <p className=\"card-span\">{this.props.humidity ? this.props.humidity + \"%\" : \"Humdity Error\"}</p>\n              <div className=\"divider\"></div>\n              <span className=\"card-span\">{this.props.date ? this.formatDate(this.props.date) : \"Date Error\"}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;","import React, { Component } from 'react';\n\nimport Card from './card';\n\nclass Cards extends Component {\n  getDeviceDescription = (serial) => {\n    const result = this.props.devices.filter(d => serial === d.serial);\n    return result[0].description;\n  }\n\n  deviceCard = () => {\n    if (this.props.readings === null) return;\n    if (this.props.readings[0] === undefined) return;\n    return  this.props.readings.map((device) => {\n      if (device[0] !== undefined) {\n      return <Card\n      key={device[0].device_id}\n      title={this.getDeviceDescription(device[0].device_id)}\n      humidity={device[0].humidity}\n      temperature={device[0].temperature}\n      date={device[0].timestamp} />\n      } else { return \"\" }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        {this.props.devices !== undefined ? this.deviceCard() : \"\"}\n      </div>\n    );\n  }\n}\n\nexport default Cards;","import React from 'react';\nimport Plotly from \"plotly.js-basic-dist\";\n\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nconst Plot = createPlotlyComponent(Plotly);\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      labels: [],\n      label: null,\n      xData: [],\n      yData: [],\n      dateData: [],\n      chartData: {},\n      options: {},\n    }\n  }\n\n  getMinOfArray(numArray) {\n    return Math.min.apply(null, numArray);\n  }\n\n  getMaxOfArray(numArray) {\n    return Math.max.apply(null, numArray);\n  }\n\n  componentDidMount() {\n    const minY1 = Math.round(this.getMinOfArray(this.props.yDataLeft) - 1);\n    const maxY1 = Math.round(this.getMaxOfArray(this.props.yDataLeft) + 1);\n\n    const minY2 = Math.round(this.getMinOfArray(this.props.yDataRight) - 1);\n    const maxY2 = Math.round(this.getMaxOfArray(this.props.yDataRight) + 1);\n\n    this.setState({\n      options: {\n        color: '#FFF',\n        elements: {\n          point: { radius: 0 }\n        },\n        responsive: true,\n        scales: {\n          y: {\n            type: 'linear',\n            position: 'left',\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)',\n            },\n            min: minY1,\n            max: maxY1,\n            ticks: {\n              display: true,\n              stepSize: 0.5,\n              color: 'rgba(255, 255, 255, 0.7)',\n            }\n          },\n          y1: {\n            type: 'linear',\n            position: 'right',\n            grid: {\n              drawOnChartArea: false, // only want the grid lines for one axis to show up\n            },\n            min: minY2,\n            max: maxY2,\n            ticks: {\n              display: true,\n              stepSize: 0.5,\n              color: 'rgba(255, 255, 255, 0.7)',\n            }\n          },\n          x: {\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)',\n            },\n            ticks: {\n              display: true,\n              color: 'rgba(255, 255, 255, 0.7)',\n            }\n          }\n        },\n      },\n    });\n  }\n\n  render() {\n    return (\n        <Plot\n          data={[\n            {\n              x: this.props.xData,\n              y: this.props.yDataLeft,\n              name: \"Temperature\",\n              mode: 'lines',\n              hovertemplate: ' %{y:.1f}&deg;C',\n            },\n            {\n              x: this.props.xData,\n              y: this.props.yDataRight,\n              yaxis: \"y2\",\n              name: \"Humidity\",\n              mode: 'lines',\n              hovertemplate: ' %{y:.0f}%',\n            },\n          ]}\n          layout={{\n            margin: {\n              t: 90,\n              b: 90,\n              l: 70,\n              r: 70,\n              pad: 10\n            },\n\n            autosize: true,\n            legend: {\n              orientation: \"h\",\n              yanchor: \"bottom\",\n              y: 1.12,\n              xanchor: \"right\",\n              x: 1,\n            },\n            xaxis: {\n              title: { text: 'Date/Time' },\n              autorange: \"false\",\n              type: 'date',\n            },\n            yaxis: { title: 'Temperature (&deg;C)', automargin: true },\n            yaxis2: {\n              title: 'Humidity (%)',\n              range: [0, 100],\n              overlaying: 'y',\n              side: 'right',\n              automargin: true,\n            },\n            hovermode: \"x unified\",\n          }}\n          useResizeHandler={true}\n          style={{ maxWidth: \"100%\", height: \"100%\" }}\n        />\n    )\n  }\n}\n\nexport default LineChart;","import React, { Component } from 'react';\n\nimport LineChart from './line-chart';\n\nclass Graph extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: this.props.data,\n      temperatures: this.props.data.map(d => d.temperature),\n      humidity: this.props.data.map(d => d.humidity),\n      timestamps: this.props.data.map(d => d.timestamp)\n    }\n  }\n\n  componentDidUpdate(previousProps, previousState) {\n    if (previousProps.data !== this.props.data) {\n      const temperatures = this.props.data.map(d => d.temperature);\n      const humidity = this.props.data.map(d => d.humidity);\n      const timestamps = this.props.data.map(d => d.timestamp);\n      this.setState({\n        temperatures: temperatures,\n        humidity: humidity,\n        timestamps: timestamps\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col s12 m12 l12\">\n          <div className=\"card blue-grey darken-1\">\n            <div className=\"card-content white-text\">\n            <LineChart\n                    labelLeft=\"Temperature (℃)\"\n                    labelRight=\"Humidity (%)\"\n                    xData={this.state.timestamps}\n                    yDataLeft={this.state.temperatures}\n                    yDataRight={this.state.humidity}\n                    title={\" \"}\n                />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Graph;","// ## Temporary fix for Blocked loading mixed active content ##\nexport const URL = 'https://ec2-54-74-135-132.eu-west-1.compute.amazonaws.com:5000';","import axios from 'axios';\nimport * as CONSTANTS from './constants';\n\nexport const getDevices = async () => {\n  const url = `${CONSTANTS.URL}/device/`;\n  const data = await fetchData(url);\n  return data.hasOwnProperty('data') ? data.data : [];\n};\n\nexport async function fetchData(url, timeout=4000) {\n  try {\n    return await axios({\n      method: 'get',\n      url: url,\n      timeout: timeout,\n    });\n  } catch {\n    return \"Error\";\n  }\n}","import axios from 'axios';\nimport * as CONSTANTS from './constants';\n\nexport const getLastReading = async (device_serial) => {\n  const url = `${CONSTANTS.URL}/data/${device_serial}/last`;\n  const data = await fetchData(url);\n  // console.log(data)\n  return data.data;\n};\n\nexport const getData = async (device_serial, start=new Date(), end=new Date()) => {\n  const url = `${CONSTANTS.URL}/data/${device_serial}?start=${start.replace('Z', '')}&end=${end.replace('Z', '')}`;\n  const data = await fetchData(url);\n  // console.log(data)\n  return data.data;\n};\n\nexport async function fetchData(url, timeout=4000) {\n  try {\n    return await axios({\n      method: 'get',\n      url: url,\n      timeout: timeout,\n    });\n  } catch {\n    return \"Error\";\n  }\n}","import React, { Component } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nimport Cards from './cards';\nimport Graph from './graph';\nimport { getDevices } from '../utils/device'\nimport { getLastReading, getData } from '../utils/device-data';\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChangeDevice = this.handleChangeDevice.bind(this);\n    this.state = {\n      devices: null,\n      last_readings: [],\n      selected_device: null,\n      device_data: null\n    }\n  }\n\n  async handleChangeDevice(e) {\n    // Check if the target device is different\n    if (e.target.text === this.state.selected_device.description) return;\n    // Update new selected device\n    let new_selected_device = this.state.devices.filter(d => d.description === e.target.text);\n    // Retrieve data from device\n    if (new_selected_device.length !== 0) {\n      // Array.filter returns array - get first element in the array\n      new_selected_device = new_selected_device[0];\n      const data = await this.getDataLast24Hours(new_selected_device.serial);\n      this.setState({\n        selected_device: new_selected_device,\n        device_data: data\n      });\n    }\n  }\n\n  async getDataLast24Hours(serial) {\n    if (serial === undefined) return;\n    if (serial == null) return;\n    let start_date = new Date();\n    start_date.setDate(start_date.getDate() - 1);\n    let end_date = new Date();\n    end_date.setDate(end_date.getDate() + 1);\n    console.log(\"getDataLast24Hours \" + serial)\n    return getData(serial, start_date.toISOString(), end_date.toISOString());\n  }\n\n  async componentDidMount() {\n    document.addEventListener('DOMContentLoaded', function () {\n      var elems = document.querySelectorAll('.datepicker');\n      const options = {\n        defaultDate: new Date(),\n        setDefaultDate: true,\n      }\n      var instances = M.Datepicker.init(elems, options);\n    }); \n    const devices = await getDevices();\n\n    this.setState({\n      devices: devices\n    });\n\n    if (this.state.devices !== undefined) {\n      this.setState({ selected_device: this.state.devices[0] })\n      const readings = await Promise.all(this.state.devices.map((device) => {\n        return getLastReading(device.serial);\n      }));\n      this.setState({\n        last_readings: readings\n      })\n\n      let start_date = new Date();\n      start_date.setDate(start_date.getDate() - 1);\n      let end_date = new Date();\n      end_date.setDate(end_date.getDate() + 1);\n      const data = await getData(this.state.selected_device.serial, start_date.toISOString(), end_date.toISOString());\n      this.setState({\n        device_data: data\n      })\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"row margin-none\">\n          <div className=\"hide-on-med-and-up center-align\">\n            <h1 className=\"white-text margin-none header-title\">Dashboard</h1>\n          </div>\n          <div className=\"col s12 m4 l2 blue-grey darken-3 min-height-100 hide-on-med-and-down\">\n            <div className=\"section white-text text-center\">\n              <h1 className=\"white-text sidebar-title\">Graphs</h1>\n              <div className=\"divider\"></div>\n              <input type=\"text\" className=\"datepicker datepicker-override\"></input>\n              <ul>\n                {this.state.devices != null ? this.state.devices.map(device => {\n                  return <li key={device.id}><a onClick={this.handleChangeDevice} className=\"waves-effect waves-light btn grey darken-2 sidebar-links\">{device.description}</a></li>\n                }) : \"\"}\n              </ul>\n            </div>\n          </div>\n          <div className=\"col s12 m12 l10 blue-grey darken-2 min-height-100vh\">\n            {this.state.last_readings != null ?\n              <Cards readings={this.state.last_readings} devices={this.state.devices} />\n              : \"\"}\n            {this.state.device_data != null && this.state.device_data !== undefined ?\n              <Graph data={this.state.device_data} />\n              : \"\"}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Container;","import './App.css';\n\nimport Container from './components/container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}